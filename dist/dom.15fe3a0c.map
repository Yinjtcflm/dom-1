{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.15fe3a0c.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create (string) {\r\n        const container = document.createElement(\"template\");//用来容纳任意元素\r\n        container.innerHTML = string.trim(); //把字符串两边的空格去掉\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling);\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent)\r\n        dom.append(parent,node)\r\n    },\r\n    remove (node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){\r\n        const {childNodes} =node\r\n        const array =[]\r\n        let x=node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x=node.firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node,name,value){\r\n        if(arguments.length===3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length===2){\r\n            return node.getAttribute(name)\r\n        }   \r\n    },\r\n    text(node,string){      //适配，符合所有浏览器\r\n        if(arguments.length===2){\r\n            if('innerText' in node){\r\n                node.innerText=string\r\n            }else{\r\n                node.textContent=string\r\n            }  \r\n        }else if(arguments.length===1){\r\n            if('innerText' in node){\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }  \r\n        }      \r\n        \r\n    },\r\n    html(node,string){\r\n        if(arguments.length===2){\r\n            node.innerHTML=string\r\n        }else if(arguments.length===1){\r\n            return node.innerHTML\r\n        }\r\n        \r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length===3){\r\n            //dom.style(div,'color','red')\r\n            node.style[name]=value\r\n        }else if(arguments.length===2){\r\n            if(typeof name==='string'){\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                //dom.style(div,{color:'red'})\r\n                const object=name\r\n                for(let key in object){\r\n                   node.style[key]=object[key]\r\n            }\r\n        }\r\n        \r\n        }\r\n    },\r\n    class:{\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector,scope){  //范围\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children)\r\n        .filter(n=>n!==node)\r\n    },\r\n    next(node){\r\n        let x=node.nextSibling\r\n        while(x && x.nodeType===3){\r\n            x=x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x=node.previousSibling\r\n        while(x && x.nodeType===3){\r\n            x=x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list=dom.children(node.parentNode)\r\n        let i\r\n        for( i=0;i<list.length;i++){\r\n            if(list[i]===node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};"]}